logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=messaging-tester

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.server.address=0.0.0.0
# lets use a different management port in case you need to listen to HTTP requests on 8080
server.port=8080
management.server.port=8081

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

cxf.path=/services

camel.component.servlet.mapping.contextPath=/camel/*
camelrest.contextPath=/camel
camelrest.apiversion=1.0-SNAPSHOT


jms.uri=amqps://amq-broker-a-acceptor-0-amq-messaging-a.apps.cluster-33cc.33cc.example.opentlc.com:443
jms.user=user
jms.pwd=password
jms.sslEnabled=true
jms.trustStorePath=tls/truststore.p12
jms.trustStorePassword=password
jms.keyStorePath=tls/keystore.p12
jms.keyStorePassword=password
jms.cache.level=CACHE_CONNECTION
jms.concurrentConsumers=10
jms.java.naming.factory.initial=org.apache.qpid.jms.jndi.JmsInitialContextFactory
jms.connectionFactory.default=${jms.uri}?transport.trustAll=true&jms.username=toto&jms.password=test

topic.loadtrigger=app.addr
queue.defaultapp=app.queue
queue.defaultapp.alt=app.queue-alt
queue.defaultapp.send=${queue.defaultapp}

queue.perf=app.perf

theme=main-dark-green

spring.resources.cache.cachecontrol.cache-public=true
spring.resources.cache.cachecontrol.max-age=0