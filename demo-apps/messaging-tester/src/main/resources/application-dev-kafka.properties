logging.config=classpath:logback-dev.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=messaging-tester

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.server.address=0.0.0.0
# lets use a different management port in case you need to listen to HTTP requests on 8080
server.port=8090
management.server.port=8190

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

cxf.path=/services

camel.component.servlet.mapping.contextPath=/camel/*
camelrest.contextPath=/camel
camelrest.apiversion=1.0-SNAPSHOT

theme=main-dark-green

spring.resources.cache.cachecontrol.cache-public=true
spring.resources.cache.cachecontrol.max-age=0
jms.connectionFactory.default=Messaging Tester
camel.component.kafka.configuration.brokers=event-brok-c-bb-d---pqk--cvl-sg.bf2.kafka.rhcloud.com:443
camel.component.kafka.configuration.ssl-truststore-location=tls/truststore.p12
camel.component.kafka.configuration.ssl-truststore-password=password
camel.component.kafka.configuration.ssl-truststore-type=PKCS12
camel.component.kafka.configuration.sasl-jaas-config=org.apache.kafka.common.security.scram.ScramLoginModule required username="kafka-user" password="pLvWAQWR4Xa4";
camel.component.kafka.configuration.security-protocol=SASL_SSL
camel.component.kafka.configuration.sasl-mechanism=SCRAM-SHA-512
camel.component.kafka.configuration.group-id=secure-group
camel.component.kafka.ssl-endpoint-algorithm=""
camel.component.kafka.ssl-endpoint-identification-algorithm=
endpoint.topic=kafka:
endpoint.queue=kafka:

topic.loadtrigger=app.addr
queue.defaultapp=app.queue.b
queue.defaultapp.alt=app.queue.b
queue.defaultapp.send=${queue.defaultapp}

queue.perf=app.perf