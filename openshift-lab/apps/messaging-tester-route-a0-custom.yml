---
apiVersion: "apps.openshift.io/v1"
kind: "DeploymentConfig"
metadata:
  labels:
    app: "messaging-tester-route-a0-custom"
    group: "demo"
  name: "messaging-tester-route-a0-custom"
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    app: "messaging-tester-route-a0-custom"
    group: "demo"
  strategy:
    rollingParams:
      timeoutSeconds: 3600
    type: "Rolling"
  template:
    metadata:
      labels:
        app: "messaging-tester-route-a0-custom"
        group: "demo"
    spec:
      containers:
      - env:
        - name: "AB_JMX_EXPORTER_CONFIG"
          value: "prometheus-config.yml"
        image: "alainpham/messaging-tester:latest"
        imagePullPolicy: "Always"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: "/actuator/health"
            port: 8081
            scheme: "HTTP"
          initialDelaySeconds: 180
          successThreshold: 1
        name: "spring-boot"
        ports:
        - containerPort: 8080
          name: "http"
          protocol: "TCP"
        - containerPort: 9779
          name: "prometheus"
          protocol: "TCP"
        - containerPort: 8778
          name: "jolokia"
          protocol: "TCP"
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: "/actuator/health"
            port: 8081
            scheme: "HTTP"
          initialDelaySeconds: 10
          successThreshold: 1
        resources:
          limits:
            cpu: "2.0"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "128Mi"
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: "/deployments/tls"
          name: "tls-secret-volume"
          readOnly: true
        - mountPath: "/deployments/config"
          name: "prop-secret-volume"
          readOnly: true
      volumes:
      - name: "tls-secret-volume"
        secret:
          defaultMode: 420
          secretName: "messaging-tester-route-a0-custom-tls-secret"
      - name: "prop-secret-volume"
        secret:
          defaultMode: 420
          secretName: "messaging-tester-route-a0-custom-prop-secret"
  triggers:
  - type: "ConfigChange"
---
apiVersion: "v1"
kind: "Service"
metadata:
  annotations:
    prometheus.io/port: "9779"
    prometheus.io/scrape: "true"
  labels:
    expose: "true"
    app: "messaging-tester-route-a0-custom"
    group: "demo"
  name: "messaging-tester-route-a0-custom"
spec:
  ports:
  - name: "http"
    port: 8080
    protocol: "TCP"
    targetPort: 8080
  selector:
    app: "messaging-tester-route-a0-custom"
    group: "demo"
---
apiVersion: "v1"
kind: "Route"
metadata:
  annotations:
    haproxy.router.openshift.io/balance: "roundrobin"
  labels:
    app: "messaging-tester-route-a0-custom"
    group: "demo"
  name: "messaging-tester-route-a0-custom"
spec:
  port:
    targetPort: "http"
  to:
    kind: "Service"
    name: "messaging-tester-route-a0-custom"
status: {}

---
kind: Secret
apiVersion: v1
metadata:
  name: "messaging-tester-route-a0-custom-prop-secret"
type: Opaque
stringData: 
  application.properties: |
    logging.config=classpath:logback-dev.xml

    # the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
    camel.springboot.name=messaging-tester

    # lets listen on all ports to ensure we can be invoked from the pod IP
    server.address=0.0.0.0
    management.server.address=0.0.0.0
    # lets use a different management port in case you need to listen to HTTP requests on 8080
    server.port=8080
    management.server.port=8081

    # disable all management enpoints except health
    endpoints.enabled = false
    endpoints.health.enabled = true

    cxf.path=/services

    camel.component.servlet.mapping.contextPath=/camel/*
    camelrest.contextPath=/camel
    camelrest.apiversion=1.0-SNAPSHOT

    theme=main-dark-green
    
    spring.resources.cache.cachecontrol.cache-public=true
    spring.resources.cache.cachecontrol.max-age=0
    
    jms.uri=(tcp://amq-broker-a-acceptor-0-amq-messaging-a.apps.cluster-33cc.33cc.example.opentlc.com:443)
    jms.user=user-a0
    jms.pwd=password
    jms.sslEnabled=true
    jms.trustStorePath=tls/truststore.p12
    jms.trustStorePassword=password
    jms.keyStorePath=tls/keystore.p12
    jms.keyStorePassword=password
    jms.cache.level=CACHE_CONSUMER
    jms.concurrentConsumers=10
    jms.java.naming.factory.initial=org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory
    jms.connectionFactory.default=${jms.uri}?sslEnabled=${jms.sslEnabled}&user=${jms.user}&password=${jms.pwd}&trustStorePath=${jms.trustStorePath}&trustStorePassword=${jms.trustStorePassword}&keyStorePath=${jms.keyStorePath}&keyStorePassword=${jms.keyStorePassword}
    jms.default.cnx.factory=default
    jms.java.naming.security.principal=${jms.user}
    jms.java.naming.security.credentials=${jms.pwd}

    topic.loadtrigger=app.addr.a
    queue.defaultapp=app.queue.a
    queue.defaultapp.alt=app.queue.b
    queue.defaultapp.send=${queue.defaultapp}

    queue.perf=app.perf

---
kind: Secret
apiVersion: v1
metadata:
  name: "messaging-tester-route-a0-custom-tls-secret"
type: Opaque
data:
  keystore.p12: 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
  truststore.p12: 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