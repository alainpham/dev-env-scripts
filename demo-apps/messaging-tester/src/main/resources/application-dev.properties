logging.config=classpath:logback-dev.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=messaging-tester

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.server.address=0.0.0.0
# lets use a different management port in case you need to listen to HTTP requests on 8080
server.port=8090
management.server.port=8190

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

cxf.path=/services

camel.component.servlet.mapping.contextPath=/camel/*
camelrest.contextPath=/camel
camelrest.apiversion=1.0-SNAPSHOT

# jms.uri=amqps://interconnect-cluster-5671-amq-messaging.apps.cluster-4cc6.4cc6.example.opentlc.com:443
# jms.uri=amqp://interconnect:5672
# jms.uri=tcp://eap6:5455
# jms.user=admin
# jms.pwd=password
# jms.sslEnabled=true
# jms.trustStorePath=tls/truststore.p12
# jms.trustStorePassword=password
# jms.keyStorePath=tls/keystore.p12
# jms.keyStorePassword=password
# jms.cache.level=CACHE_CONSUMER
# jms.concurrentConsumers=10
# AMQP
# jms.java.naming.factory.initial=org.apache.qpid.jms.jndi.JmsInitialContextFactory

# artemis coreprotocol
#jms.java.naming.factory.initial=org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory

#jms.connectionFactory.default=${jms.uri}?user=jmsuser&password=password0!

jms.java.naming.factory.initial=org.jboss.naming.remote.client.InitialContextFactory
jms.java.naming.provider.url=remote://eap6:4447
jms.java.naming.security.principal=jmsuser
jms.java.naming.security.credentials=password0!
jms.default.cnx.factory=jms/RemoteConnectionFactory

topic.loadtrigger=app.addr
queue.defaultapp=app.queue
queue.defaultapp.send=${queue.defaultapp}

queue.perf=app.perf