logging.config=classpath:logback-dev.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=messaging-tester

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.server.address=0.0.0.0
# lets use a different management port in case you need to listen to HTTP requests on 8080
server.port=8090
management.server.port=8190

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

cxf.path=/services

camel.component.servlet.mapping.contextPath=/camel/*
camelrest.contextPath=/camel
camelrest.apiversion=1.0-SNAPSHOT

theme=main-dark-green

spring.resources.cache.cachecontrol.cache-public=true
spring.resources.cache.cachecontrol.max-age=0


jms.uri=(tcp://amqbrokera0:61617)
jms.user=user
jms.pwd=password
jms.sslEnabled=true
jms.trustStorePath=tls/truststore.p12
jms.trustStorePassword=password
jms.keyStorePath=tls/keystore.p12
jms.keyStorePassword=password
jms.cache.level=CACHE_CONSUMER
jms.concurrentConsumers=10
jms.java.naming.factory.initial=org.apache.activemq.artemis.jndi.ActiveMQInitialContextFactory
jms.connectionFactory.default=${jms.uri}?sslEnabled=${jms.sslEnabled}&user=${jms.user}&password=${jms.pwd}&trustStorePath=${jms.trustStorePath}&trustStorePassword=${jms.trustStorePassword}&keyStorePath=${jms.keyStorePath}&keyStorePassword=${jms.keyStorePassword}
jms.default.cnx.factory=default
jms.java.naming.security.principal=jmsuser
jms.java.naming.security.credentials=password0!

topic.loadtrigger=app.addr
queue.defaultapp=app.queue
queue.defaultapp.send=${queue.defaultapp}

queue.perf=app.perf